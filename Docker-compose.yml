
version: '3.7'
# Define services
services:

  postgres:
    image: 'postgres'
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: bereket # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: root # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: student_csv # The PostgreSQL default database (automatically created at first launch)
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - postgres1
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
  pgadmin:
    container_name: pgadmin12
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DEFAULT_SERVER_MODE: "False"
    volumes:
      - pgadmin12:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres1
    restart: unless-stopped

  back-end:
    # Configuration for building the docker image for the backend service
    build:
      #context: . # Use an image built from the specified dockerfile in the `back-end` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    depends_on:
      - postgres # This service depends on mysql. Start that first.
    networks:
      - postgres1
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/student_csv
      - SPRING_DATASOURCE_USERNAME=bereket
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - input=classpath:dummy_data.csv
volumes:
  db-data:
  pgadmin12:

networks:
  postgres1:
    driver: bridge